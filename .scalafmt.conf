version = "2.6.1"

lineEndings = unix
encoding = "UTF-8"

maxColumn = 120
docstrings = ScalaDoc
assumeStandardLibraryStripMargin = true
includeCurlyBraceInSelectChains = false
includeNoParensInSelectChains = false
indentYieldKeyword = true

danglingParentheses {
  callSite = true
  defnSite = true
  ctrlSite = false
}

continuationIndent {
  callSite = 2
  defnSite = 2
  extendSite = 2
  ctorSite = 2
}

align {
  preset = most
  openParenCallSite = false
  openParenDefnSite = false
  ifWhileOpenParen = true
  multiline = false
  tokens.add = [
    { code = ":", owner = "Term.Param" },
    { code = "=" }
  ]
  treeCategory {
    "Defn.Trait" = "class/object/trait"
    "Defn.Object" = "class/object/trait"
    "Defn.Val" = "val/var/def"
    "Defn.Def" = "val/var/def"
    "Defn.Var" = "val/var/def"
    "Enumerator.Generator" = for
    "Enumerator.Val" = for
    "Defn.Class" = "class/object/trait"
  }
}

spaces {
  beforeContextBoundColon = Always
  afterTripleEquals = false
  inImportCurlyBraces = true
  inParentheses = false
  neverAroundInfixTypes = []
  afterKeywordBeforeParen = true
  inByNameTypes = true
  afterSymbolicDefs = true
}


newlines {
  alwaysBeforeTopLevelStatements = true
  alwaysBeforeElseAfterCurlyIf = false
  alwaysBeforeCurlyBraceLambdaParams = false
  alwaysBeforeMultilineDef = false
  penalizeSingleSelectMultiArgList = true
  neverBeforeJsNative = true
  sometimesBeforeColonInMethodReturnType = false
  afterCurlyLambda = never
  avoidAfterYield = true
  neverInResultType = true
}

verticalMultiline {
  newlineAfterImplicitKW = false
  newlineBeforeImplicitKW = false
}

literals {
  long = Upper
  float = Lower
  double = Lower
  hexPrefix = Lower
  hexDigits = Upper
  scientific = Lower
}

rewrite {
  rules = [
    RedundantParens
    SortModifiers
    PreferCurlyFors
    SortImports
  ]
  sortModifiers.order = [
    "private"
    "protected"
    "implicit"
    "final",
    "sealed"
    "abstract"
    "override"
    "lazy"
  ]
}

verticalMultiline.atDefnSite = false

binPack {
  unsafeCallSite = false
  unsafeDefnSite = false
  parentConstructors = false
  literalsIncludeSimpleExpr = true
  literalArgumentLists = true
  literalsMinArgCount = 5
  literalsInclude = [
    ".*"
  ]
  literalsExclude = [
    "Term.Name"
  ]
}

optIn {
  breakChainOnFirstMethodDot = false
  configStyleArguments = false
  breaksInsideChains = true
  selfAnnotationNewline = false
  annotationNewlines = false
  blankLineBeforeDocstring = true
}
